"""
Problem 29: Distinct powers
https://projecteuler.net/problem=29

Consider all integer combinations of a^b for 2 <= a <= 5 and 2 <= b <= 5:
22=4, 23=8, 24=16, 25=32
32=9, 33=27, 34=81, 35=243
42=16, 43=64, 44=256, 45=1024
52=25, 53=125, 54=625, 55=3125

If they are then placed in numerical order, with any repeats removed,
we get the following sequence of 15 distinct terms:
4, 8, 9, 16, 25, 27, 32, 64, 81, 125, 243, 256, 625, 1024, 3125

How many distinct terms are in the sequence
generated by a^b for 2 <= a <= 100 and 2 <= b <= 100?
"""


def test_get_power_sequence():
    # arrange
    from src.p029_distinct_powers import get_power_sequence

    # act
    actual_result_iter = get_power_sequence(5, 5)

    # assert
    expected_result = [
        '4', '8', '16', '32',
        '9', '27', '81', '243',
        '16', '64', '256', '1024',
        '25', '125', '625', '3125',
    ]
    assert list(actual_result_iter) == expected_result
