"""
Problem 45: Triangular, pentagonal, and hexagonal
https://projecteuler.net/problem=45

Triangle, pentagonal, and hexagonal numbers are generated by the following formulae:

Triangle	 	T_n=n(n+1)/2	 	1, 3, 6, 10, 15, ...
Pentagonal	 	P_n=n(3n−1)/2	 	1, 5, 12, 22, 35, ...
Hexagonal	 	H_n=n(2n−1)	 	1, 6, 15, 28, 45, ...
It can be verified that T_285 = P_165 = H_143 = 40755.

Find the next triangle number that is also pentagonal and hexagonal.
"""
# pylint: disable=invalid-name

from typing import Iterable

from src.common.special_numbers import is_triangle_number, is_pentagonal_number, \
    get_hexagonal_number


def _get_special_triple_numbers() -> Iterable[int]:
    """Get numbers that are triangle, pentagonal and hexagonal numbers."""
    n = 1
    while True:
        number = get_hexagonal_number(n)
        if is_triangle_number(number) and is_pentagonal_number(number):
            yield number
        n += 1


def main() -> None:
    """Main function."""
    special_triple_numbers = _get_special_triple_numbers()
    first_special_number = next(special_triple_numbers)
    assert first_special_number == 1
    second_special_number = next(special_triple_numbers)
    assert second_special_number == 40755
    third_special_number = next(special_triple_numbers)
    print(f'The next triangle number that is also pentagonal and hexagonal ' \
          f'is {third_special_number:,}.')


if __name__ == '__main__':
    main()
