"""
Problem 12: Highly divisible triangular number
https://projecteuler.net/problem=12

The sequence of triangle numbers is generated by adding the natural numbers.
So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:

1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

Let us list the factors of the first seven triangle numbers:

 1: 1
 3: 1,3
 6: 1,2,3,6
10: 1,2,5,10
15: 1,3,5,15
21: 1,3,7,21
28: 1,2,4,7,14,28
We can see that 28 is the first triangle number to have over five divisors.

What is the value of the first triangle number to have over five hundred divisors?
"""

from typing import Iterator, Tuple

from src.common.primes import get_prime_factors_map
from src.common.calculations import calculate_product


def get_triangle_numbers() -> Iterator[int]:
    """Generator for triangle numbers."""
    triangle_number = 0
    i = 1
    while True:
        triangle_number += i
        i += 1
        yield triangle_number


def get_number_of_divisors(num: int) -> int:
    """Get number of divisors for a given number `num`."""
    prime_factors_map = get_prime_factors_map(num)
    # the number of divisors is the product of each of the prime factor exponents plus one
    # https://math.stackexchange.com/questions/422867/how-many-divsors-of-4725-are-there/422881#422881
    prime_exponents = [prime_exponent + 1 for prime_exponent in prime_factors_map.values()]
    return calculate_product(prime_exponents)


# pylint: disable=inconsistent-return-statements
def get_triangle_number_with_min_number_of_divisors(threshold: int) -> Tuple[int, int]:
    """Generator for triangle numbers and their number of divisors."""
    for triangle_number in get_triangle_numbers():
        number_of_divisors = get_number_of_divisors(triangle_number)
        if number_of_divisors > threshold:
            return triangle_number, number_of_divisors


def main() -> None:
    """Main function."""
    threshold = 500
    triangle_number, number_of_divisors = get_triangle_number_with_min_number_of_divisors(threshold)
    print((f'The first triangle number with over {threshold:,} divisors is {triangle_number:,}. '
           f'It has {number_of_divisors:,} divisors.'))


if __name__ == '__main__':
    main()
